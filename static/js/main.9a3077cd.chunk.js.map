{"version":3,"sources":["redux/input/input.types.js","components/button/button.jsx","redux/input/input.actions.js","components/input/input.jsx","assets/equal.svg.jsx","components/equalButton/equalButton.jsx","assets/positive-negative.svg.jsx","assets/percentage.svg.jsx","assets/divide.svg.jsx","assets/add.svg.jsx","assets/subtract.svg.jsx","assets/multiply.svg.jsx","components/layout/layout.jsx","App.js","redux/input/input.reducer.js","redux/root-reducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["inputTypes","connect","state","dispatch","addToInput","item","type","payload","clearOutput","children","end","operator","className","onClick","inputReducer","inputItems","solution","EqualSvgComponent","fill","data-name","viewBox","d","calculatedSolution","val","math_it_up","op","x","y","parseFloat","arr","operators","tempArr","k","length","i","tempCalc","leftItem","rightItem","index","indexOf","splice","calculate","PosNegSvgComponent","strokeLinecap","strokeMiterlimit","strokeWidth","PercentageSvgComponent","cx","cy","rx","ry","DivideSvgComponent","r","AddSvgComponent","SubtractSvgComponent","MultiplySvgComponent","Layout","props","App","INITIAL_STATE","action","isNaN","slice","temp","pop","rootReducer","combineReducers","store","createStore","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qWAAaA,EACG,eADHA,EAEM,kBAFNA,EAGG,eCgCDC,eAPS,SAAAC,GAAK,MAAK,MAEP,SAAAC,GAAQ,MAAK,CACtCC,WAAY,SAAAC,GAAI,OAAIF,EC7BI,SAAAE,GAAI,MAAK,CACjCC,KAAMN,EACNO,QAASF,GD2BoBD,CAAWC,KACxCG,YAAa,kBAAML,ECpBa,CAChCG,KAAMN,QDsBOC,EA9BA,SAAC,GAA0D,IAAxDQ,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,IAAKN,EAAwC,EAAxCA,WAAYO,EAA4B,EAA5BA,SAAUH,EAAkB,EAAlBA,YAarD,OACE,yBACEI,UAAS,cAASF,EAAM,QAAU,MAClCG,QAAS,WAdPF,EACe,MAAbA,EACFP,EAAWO,GAEXH,IAGFJ,EAAWK,KASVA,MENQR,G,MAAAA,aALS,SAAC,GAAD,QAAGa,aAAH,MAAiD,CACvEC,WADsB,EAAmBA,WAEzCC,SAFsB,EAA+BA,YAKxCf,EAbD,SAAC,GAA8B,IAA5Bc,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC3B,OACE,yBAAKJ,UAAU,eACb,uBAAGA,UAAU,aAAaG,GAC1B,uBAAGH,UAAU,YAAYI,Q,OCkBhBC,MAxBf,YAAsC,IAATC,EAAQ,EAARA,KAC3B,OACE,uBACEN,UAAU,gBACVM,KAAMA,EACNC,YAAU,UACVC,QAAQ,eAER,4BACE,6BAEI,4FAIN,6BAAQ,sBACR,wBACER,UAAU,gBACVS,EAAE,2CCsDKpB,G,MAAAA,aARS,SAAC,GAAD,MAAuC,CAC7Dc,WADsB,EAAGD,aAAgBC,eAIhB,SAAAZ,GAAQ,MAAK,CACtCmB,mBAAoB,SAAAC,GAAG,OAAIpB,EHhEe,CAC1CG,KAAMN,EACNO,QG8DuDgB,QAG1CtB,EApEK,SAAC,GAAwC,IAAtCc,EAAqC,EAArCA,WAAYO,EAAyB,EAAzBA,mBACjC,SAASE,EAAWC,EAAIC,EAAGC,GAGzB,OAFAD,EAAIE,WAAWF,GACfC,EAAIC,WAAWD,GACPF,GACN,IAAK,IACH,OAAOC,EAAIC,EACb,IAAK,IACH,OAAOD,EAAIC,EACb,IAAK,IACH,OAAOD,EAAIC,EACb,IAAK,IACH,OAAOD,EAAIC,EACb,QACE,OAAO,MAuCb,OACE,yBAAKf,UAAU,gBAAgBC,QALP,WACxBS,EAhCF,SAAmBO,GAIjB,IAHA,IAAIC,EAAY,CAAC,IAAK,IAAK,IAAK,KAC5BC,EAAO,YAAOF,GACdG,EAAI,EACDA,EAAIF,EAAUG,QAAQ,CAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQE,OAAQC,IAAK,CACvC,IAAIC,EAAW,EACf,GAAIJ,EAAQG,KAAOJ,EAAUE,GAAI,CAC/B,IAAII,EAAWL,EAAQG,EAAI,GACzBG,EAAYN,EAAQG,EAAI,GAC1BC,EAAWX,EAAWM,EAAUE,GAAII,EAAUC,GAC9C,IAAIC,EAAQP,EAAQQ,QAAQH,GACxBE,GAAS,GACXP,EAAQS,OAAOF,EAAO,IAExBA,EAAQP,EAAQQ,QAAQF,KACX,GACXN,EAAQS,OAAOF,EAAO,IAExBA,EAAQP,EAAQQ,QAAQT,EAAUE,MACrB,IACXD,EAAQO,GAASH,EACjBD,MAINF,IAEF,OAAOD,EAAQ,GAIIU,CAAU1B,MAK3B,kBAAC,EAAD,WCtCS2B,MArBf,YAAuC,IAATxB,EAAQ,EAARA,KAC5B,OACE,uBACEN,UAAU,gBACVM,KAAMA,EACNC,YAAU,UACVC,QAAQ,eAER,6BAAQ,sBACR,wBAAMC,EAAE,ybACR,wBAEEsB,cAAc,QACdC,iBAAkB,GAClBC,YAAa,KACbxB,EAAE,+BC2BKyB,MA1Cf,YAA2C,IAAT5B,EAAQ,EAARA,KAChC,OACE,uBACEA,KAAMA,EACNN,UAAU,gBACVO,YAAU,UACVC,QAAQ,eAER,4BACE,6BAEI,4FAIN,6BAAQ,sBACR,wBACEyB,YAAa,KACb3B,KAAK,OAELyB,cAAc,QACdC,iBAAkB,GAClBvB,EAAE,6BAEJ,2BACET,UAAU,gBACVmC,GAAI,MACJC,GAAI,MACJC,GAAI,KACJC,GAAI,OAEN,2BACEtC,UAAU,gBACVmC,GAAI,MACJC,GAAI,MACJC,GAAI,KACJC,GAAI,SCbGC,MAvBf,YAAuC,IAATjC,EAAQ,EAARA,KAC5B,OACE,uBACEN,UAAU,gBACVM,KAAMA,EACNC,YAAU,UACVC,QAAQ,eAER,6BAAQ,sBACR,wBACEF,KAAK,OAELyB,cAAc,QACdC,iBAAkB,GAClBC,YAAa,KACbxB,EAAE,oBAEJ,0BAAQ0B,GAAI,GAAIC,GAAI,MAAOI,EAAG,OAC9B,0BAAQL,GAAI,GAAIC,GAAI,MAAOI,EAAG,SCJrBC,MAdf,YAAoC,IAATnC,EAAQ,EAARA,KACzB,OACE,uBACEN,UAAU,gBACVO,YAAU,UACVD,KAAMA,EACNE,QAAQ,eAER,6BAAQ,sBACR,wBAAMC,EAAE,2UCKCiC,MAdf,YAAyC,IAATpC,EAAQ,EAARA,KAC9B,OACE,uBACEN,UAAU,gBACVM,KAAMA,EACNC,YAAU,UACVC,QAAQ,eAER,6BAAQ,sBACR,wBAAMC,EAAE,+GCKCkC,MAdf,YAAyC,IAATrC,EAAQ,EAARA,KAC9B,OACE,uBACEN,UAAU,gBACVM,KAAMA,EACNC,YAAU,UACVC,QAAQ,eAER,6BAAQ,sBACR,wBAAMC,EAAE,6WCsDCmC,EArDA,SAAAC,GACb,OACE,yBAAK7C,UAAU,YACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAAQD,SAAS,KAAjB,KACA,kBAAC,EAAD,CAAQA,SAAS,QACf,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAQA,SAAS,KACf,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAQA,SAAS,IAAID,KAAK,GACxB,kBAAC,EAAD,QAGJ,yBAAKE,UAAU,OACb,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,CAAQD,SAAS,IAAID,KAAK,GACxB,kBAAC,EAAD,QAGJ,yBAAKE,UAAU,OACb,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,CAAQD,SAAS,IAAID,KAAK,GACxB,kBAAC,EAAD,QAGJ,yBAAKE,UAAU,OACb,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,CAAQD,SAAS,IAAID,KAAK,GACxB,kBAAC,EAAD,QAGJ,yBAAKE,UAAU,OACb,kBAAC,EAAD,UACA,kBAAC,EAAD,UACA,kBAAC,EAAD,UC9CK8C,MARf,WACE,OACE,yBAAK9C,UAAU,OACb,kBAAC,EAAD,Q,sBCLA+C,EAAgB,CACpB5C,WAAY,GACZC,SAAU,GA6CGF,EA1CM,WAAoC,IAAnCZ,EAAkC,uDAA1ByD,EAAeC,EAAW,uCAC9CtD,EAAkBsD,EAAlBtD,KAAMC,EAAYqD,EAAZrD,QACd,OAAQD,GACN,KAAKN,EACH,GAAI6D,MAAMtD,IAAwB,MAAZA,EACpB,OAAO,eACFL,EADL,CAEEa,WAAW,GAAD,mBAAMb,EAAMa,YAAZ,CAAwBR,MAGpC,GACEL,EAAMa,WAAWkB,QAAU,IAC1B4B,MAAM3D,EAAMa,WAAW+C,OAAO,GAAG,IAClC,CACA,IAAIC,EAAO7D,EAAMa,WAAWiD,MAE5B,OADAD,GAAQxD,EACD,eACFL,EADL,CAEEa,WAAW,GAAD,mBAAMb,EAAMa,YAAZ,CAAwBgD,MAGtC,OAAO,eACF7D,EADL,CAEEa,WAAW,GAAD,mBAAMb,EAAMa,YAAZ,CAAwBR,MAGxC,KAAKP,EACH,OAAO,eACFE,EADL,CAEEc,SAAUT,IAEd,KAAKP,EACH,OAAO,eACFE,EADL,CAEEa,WAAY,GACZC,SAAU,IAEd,QACE,OAAOd,ICtCE+D,EAJKC,YAAgB,CAClCpD,aAAcA,ICMT,IAAMqD,EAAQC,YAAYH,EAAaI,IAAe,WAAf,EAN1B,KCQAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,OAEFU,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9a3077cd.chunk.js","sourcesContent":["export const inputTypes = {\n  ADD_TO_INPUT: \"ADD_TO_INPUT\",\n  SOLUTION_OUTPUT: \"SOLUTION_OUTPUT\",\n  CLEAR_OUTPUT: \"CLEAR_OUTPUT\"\n};\n","import React from \"react\";\nimport \"./button.scss\";\nimport { connect } from \"react-redux\";\nimport { addToInput, clearOutput } from \"../../redux/input/input.actions\";\n\nconst Button = ({ children, end, addToInput, operator, clearOutput }) => {\n  const handleClick = () => {\n    if (operator) {\n      if (operator !== \"C\") {\n        addToInput(operator);\n      } else {\n        clearOutput();\n      }\n    } else {\n      addToInput(children);\n    }\n  };\n\n  return (\n    <div\n      className={`btn ${end ? \"btn-2\" : null}`}\n      onClick={() => handleClick()}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  addToInput: item => dispatch(addToInput(item)),\n  clearOutput: () => dispatch(clearOutput())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);\n","import { inputTypes } from \"./input.types\";\n\nexport const addToInput = item => ({\n  type: inputTypes.ADD_TO_INPUT,\n  payload: item\n});\n\nexport const calculatedSolution = value => ({\n  type: inputTypes.SOLUTION_OUTPUT,\n  payload: value\n});\n\nexport const clearOutput = () => ({\n  type: inputTypes.CLEAR_OUTPUT\n});\n","import React from \"react\";\nimport \"./input.scss\";\nimport { connect } from \"react-redux\";\n\nconst Input = ({ inputItems, solution }) => {\n  return (\n    <div className=\"cal-display\">\n      <p className=\"valuation\">{inputItems}</p>\n      <p className=\"solution\">{solution}</p>\n    </div>\n  );\n};\nconst mapStateToProps = ({ inputReducer: { inputItems, solution } }) => ({\n  inputItems,\n  solution\n});\n\nexport default connect(mapStateToProps)(Input);\n","import * as React from \"react\";\n\nfunction EqualSvgComponent({ fill }) {\n  return (\n    <svg\n      className=\"calc-op-icons\"\n      fill={fill}\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 100 100\"\n    >\n      <defs>\n        <style>\n          {\n            \".prefix__cls-1{fill:none;stroke-linecap:round;stroke-miterlimit:10;stroke-width:6.24px}\"\n          }\n        </style>\n      </defs>\n      <title>{\"Calculator Symbols\"}</title>\n      <path\n        className=\"prefix__cls-1\"\n        d=\"M63.63 43.56H36.37M63.63 56.44H36.37\"\n      />\n    </svg>\n  );\n}\n\nexport default EqualSvgComponent;\n","import React from \"react\";\nimport EqualSvgComponent from \"../../assets/equal.svg\";\nimport \"./equalButton.scss\";\nimport { connect } from \"react-redux\";\nimport { calculatedSolution } from \"../../redux/input/input.actions\";\n\nconst EqualButton = ({ inputItems, calculatedSolution }) => {\n  function math_it_up(op, x, y) {\n    x = parseFloat(x);\n    y = parseFloat(y);\n    switch (op) {\n      case \"+\":\n        return x + y;\n      case \"-\":\n        return x - y;\n      case \"*\":\n        return x * y;\n      case \"/\":\n        return x / y;\n      default:\n        return null;\n    }\n  }\n\n  function calculate(arr) {\n    var operators = [\"*\", \"/\", \"+\", \"-\"];\n    let tempArr = [...arr];\n    let k = 0;\n    while (k < operators.length) {\n      for (let i = 0; i < tempArr.length; i++) {\n        let tempCalc = 0;\n        if (tempArr[i] === operators[k]) {\n          let leftItem = tempArr[i - 1],\n            rightItem = tempArr[i + 1];\n          tempCalc = math_it_up(operators[k], leftItem, rightItem);\n          let index = tempArr.indexOf(leftItem);\n          if (index > -1) {\n            tempArr.splice(index, 1);\n          }\n          index = tempArr.indexOf(rightItem);\n          if (index > -1) {\n            tempArr.splice(index, 1);\n          }\n          index = tempArr.indexOf(operators[k]);\n          if (index > -1) {\n            tempArr[index] = tempCalc;\n            i--;\n          }\n        }\n      }\n      k++;\n    }\n    return tempArr[0];\n  }\n\n  const handleCalculation = () => {\n    calculatedSolution(calculate(inputItems));\n  };\n\n  return (\n    <div className=\"equal-btn btn\" onClick={handleCalculation}>\n      <EqualSvgComponent />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ inputReducer: { inputItems } }) => ({\n  inputItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  calculatedSolution: val => dispatch(calculatedSolution(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EqualButton);\n","import * as React from \"react\";\n\nfunction PosNegSvgComponent({ fill }) {\n  return (\n    <svg\n      className=\"calc-op-icons\"\n      fill={fill}\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 100 100\"\n    >\n      <title>{\"Calculator Symbols\"}</title>\n      <path d=\"M43.05 33.42h-3.48A2.42 2.42 0 0137.15 31v-3.48a2.94 2.94 0 00-2.68-3 2.83 2.83 0 00-3 2.83V31a2.42 2.42 0 01-2.42 2.42h-3.47a2.94 2.94 0 00-3 2.68 2.83 2.83 0 002.83 3h3.64a2.42 2.42 0 012.42 2.42V45a2.94 2.94 0 002.68 3 2.83 2.83 0 003-2.83V41.5a2.42 2.42 0 012.42-2.42h3.64a2.83 2.83 0 002.83-3 2.94 2.94 0 00-2.99-2.66zM74.42 62.44H56.95a2.94 2.94 0 00-3 2.68 2.83 2.83 0 002.83 3h17.8a2.83 2.83 0 002.83-3 2.94 2.94 0 00-2.99-2.68z\" />\n      <path\n        /* stroke=\"#61c6f2\" */\n        strokeLinecap=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={4.78}\n        d=\"M68.66 25.31L31.34 77.04\"\n      />\n    </svg>\n  );\n}\n\nexport default PosNegSvgComponent;\n","import * as React from \"react\";\n\nfunction PercentageSvgComponent({ fill }) {\n  return (\n    <svg\n      fill={fill}\n      className=\"calc-op-icons\"\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 100 100\"\n    >\n      <defs>\n        <style>\n          {\n            \".prefix__cls-2{fill:none;stroke-linecap:round;stroke-miterlimit:10;stroke-width:4.96px}\"\n          }\n        </style>\n      </defs>\n      <title>{\"Calculator Symbols\"}</title>\n      <path\n        strokeWidth={4.78}\n        fill=\"none\"\n        /* stroke=\"#61c6f2\" */\n        strokeLinecap=\"round\"\n        strokeMiterlimit={10}\n        d=\"M68.66 25.13L31.34 76.87\"\n      />\n      <ellipse\n        className=\"prefix__cls-2\"\n        cx={35.66}\n        cy={31.71}\n        rx={6.14}\n        ry={6.62}\n      />\n      <ellipse\n        className=\"prefix__cls-2\"\n        cx={64.34}\n        cy={69.94}\n        rx={6.14}\n        ry={6.62}\n      />\n    </svg>\n  );\n}\n\nexport default PercentageSvgComponent;\n","import * as React from \"react\";\n\nfunction DivideSvgComponent({ fill }) {\n  return (\n    <svg\n      className=\"calc-op-icons\"\n      fill={fill}\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 100 100\"\n    >\n      <title>{\"Calculator Symbols\"}</title>\n      <path\n        fill=\"none\"\n        /* stroke=\"#f6f6f6\" */\n        strokeLinecap=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={6.24}\n        d=\"M67.89 50H32.11\"\n      />\n      <circle cx={50} cy={34.22} r={5.46} />\n      <circle cx={50} cy={65.78} r={5.46} />\n    </svg>\n  );\n}\n\nexport default DivideSvgComponent;\n","import * as React from \"react\";\n\nfunction AddSvgComponent({ fill }) {\n  return (\n    <svg\n      className=\"calc-op-icons\"\n      data-name=\"Layer 1\"\n      fill={fill}\n      viewBox=\"0 0 100 100\"\n    >\n      <title>{\"Calculator Symbols\"}</title>\n      <path d=\"M64.4 47.17h-9.15a2.42 2.42 0 01-2.42-2.42V35.6a2.94 2.94 0 00-2.68-3 2.83 2.83 0 00-3 2.83v9.31a2.42 2.42 0 01-2.42 2.42H35.6a2.94 2.94 0 00-3 2.68 2.83 2.83 0 002.83 3h9.31a2.42 2.42 0 012.42 2.42v9.14a2.94 2.94 0 002.68 3 2.83 2.83 0 003-2.83v-9.32a2.42 2.42 0 012.42-2.42h9.31a2.83 2.83 0 002.83-3 2.94 2.94 0 00-3-2.66z\" />\n    </svg>\n  );\n}\n\nexport default AddSvgComponent;\n","import * as React from \"react\";\n\nfunction SubtractSvgComponent({ fill }) {\n  return (\n    <svg\n      className=\"calc-op-icons\"\n      fill={fill}\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 100 100\"\n    >\n      <title>{\"Calculator Symbols\"}</title>\n      <path d=\"M35.44 52.83a2.83 2.83 0 01-2.83-3 2.94 2.94 0 013-2.68H64.4a2.94 2.94 0 013 2.68 2.83 2.83 0 01-2.83 3z\" />\n    </svg>\n  );\n}\n\nexport default SubtractSvgComponent;\n","import * as React from \"react\";\n\nfunction MultiplySvgComponent({ fill }) {\n  return (\n    <svg\n      className=\"calc-op-icons\"\n      fill={fill}\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 100 100\"\n    >\n      <title>{\"Calculator Symbols\"}</title>\n      <path d=\"M62.21 58.18l-6.47-6.47a2.42 2.42 0 010-3.42l6.47-6.47a2.94 2.94 0 00.22-4 2.83 2.83 0 00-4.11-.11l-6.58 6.58a2.42 2.42 0 01-3.42 0l-6.47-6.47a2.94 2.94 0 00-4-.22 2.83 2.83 0 00-.11 4.11l6.58 6.58a2.42 2.42 0 010 3.42l-6.47 6.47a2.94 2.94 0 00-.22 4 2.83 2.83 0 004.11.11l6.58-6.58a2.42 2.42 0 013.42 0l6.58 6.58a2.83 2.83 0 004.11-.11 2.94 2.94 0 00-.22-4z\" />\n    </svg>\n  );\n}\n\nexport default MultiplySvgComponent;\n","import React from \"react\";\nimport \"./layout.scss\";\nimport Button from \"../button/button\";\nimport Input from \"../input/input\";\nimport EqualButton from \"../equalButton/equalButton\";\nimport PosNegSvgComponent from \"../../assets/positive-negative.svg\";\nimport PercentageSvgComponent from \"../../assets/percentage.svg\";\nimport DivideSvgComponent from \"../../assets/divide.svg\";\nimport AddSvgComponent from \"../../assets/add.svg\";\nimport SubtractSvgComponent from \"../../assets/subtract.svg\";\nimport MultiplySvgComponent from \"../../assets/multiply.svg\";\n\nconst Layout = props => {\n  return (\n    <div className=\"cal-full\">\n      <div className=\"calc-wrapper\">\n        <div className=\"ip-container\">\n          <Input />\n        </div>\n        <div className=\"row\">\n          <Button operator=\"C\">C</Button>\n          <Button operator=\"±\">\n            <PosNegSvgComponent />\n          </Button>\n          <Button operator=\"%\">\n            <PercentageSvgComponent />\n          </Button>\n          <Button operator=\"/\" end={true}>\n            <DivideSvgComponent />\n          </Button>\n        </div>\n        <div className=\"row\">\n          <Button>7</Button>\n          <Button>8</Button>\n          <Button>9</Button>\n          <Button operator=\"*\" end={true}>\n            <MultiplySvgComponent />\n          </Button>\n        </div>\n        <div className=\"row\">\n          <Button>4</Button>\n          <Button>5</Button>\n          <Button>6</Button>\n          <Button operator=\"-\" end={true}>\n            <SubtractSvgComponent />\n          </Button>\n        </div>\n        <div className=\"row\">\n          <Button>1</Button>\n          <Button>2</Button>\n          <Button>3</Button>\n          <Button operator=\"+\" end={true}>\n            <AddSvgComponent />\n          </Button>\n        </div>\n        <div className=\"row\">\n          <Button>0</Button>\n          <Button>.</Button>\n          <EqualButton />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Layout from \"./components/layout/layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","import { inputTypes } from \"./input.types\";\n\nconst INITIAL_STATE = {\n  inputItems: \"\",\n  solution: 0\n};\n\nconst inputReducer = (state = INITIAL_STATE, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case inputTypes.ADD_TO_INPUT:\n      if (isNaN(payload) && payload !== \".\")\n        return {\n          ...state,\n          inputItems: [...state.inputItems, payload]\n        };\n      else {\n        if (\n          state.inputItems.length >= 1 &&\n          !isNaN(state.inputItems.slice(-1)[0])\n        ) {\n          let temp = state.inputItems.pop();\n          temp += payload;\n          return {\n            ...state,\n            inputItems: [...state.inputItems, temp]\n          };\n        }\n        return {\n          ...state,\n          inputItems: [...state.inputItems, payload]\n        };\n      }\n    case inputTypes.SOLUTION_OUTPUT:\n      return {\n        ...state,\n        solution: payload\n      };\n    case inputTypes.CLEAR_OUTPUT:\n      return {\n        ...state,\n        inputItems: \"\",\n        solution: 0\n      };\n    default:\n      return state;\n  }\n};\n\nexport default inputReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./input/input.reducer\";\n\nconst rootReducer = combineReducers({\n  inputReducer: inputReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}